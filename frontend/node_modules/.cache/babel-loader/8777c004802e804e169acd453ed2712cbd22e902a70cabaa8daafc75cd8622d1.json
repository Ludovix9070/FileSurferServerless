{"ast":null,"code":"var _jsxFileName = \"/home/valerio/Uni/SDCC/FileSurferServerless/frontend/src/FileUpload.js\";\nimport React, { Component } from \"react\";\nimport { getUser, resetUserSession } from './service/AuthService';\nimport { render } from \"@testing-library/react\";\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nclass FileUpload extends Component {\n  constructor(...args) {\n    super(...args);\n    //const FileUpload = (props) => {\n    //user = getUser();\n    //name = user !== 'undefined' && user ? user.name : '';\n    this.logoutHandler = () => {\n      resetUserSession();\n      //props.history.push('/login');\n      window.location = \"https://yv8a67sww8.execute-api.us-east-1.amazonaws.com/prod/login\";\n    };\n    ///////////////////////////////////////////////////////////\n    this.state = {\n      selectedFile: null,\n      fileUploadSuccessfully: false\n    };\n    this.onFileChange = event => {\n      this.setState({\n        selectedFile: event.target.files[0]\n      });\n    };\n    this.onFileUpload = () => {\n      const formData = new FormData();\n      formData.append(\"demo file\", this.state.selectedFile, this.state.selectedFile.name);\n      //call api to upload the file\n      axios.post(\" https://yv8a67sww8.execute-api.us-east-1.amazonaws.com/prod/file-upload\", formData).then(() => {\n        this.setState({\n          selectedFile: null\n        });\n        this.setState({\n          fileUploadSuccessfully: true\n        });\n      });\n    };\n    this.fileData = () => {\n      if (this.state.selectedFile) {\n        var date = new Date(this.state.selectedFile.lastModified);\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            children: \"File Details:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 50,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"File Name: \", this.state.selectedFile.name]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 51,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"File Type: \", this.state.selectedFile.type]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 52,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"Last Modified: \", \" \", date.getDate() + \"-\" + date.getMonth() + \"-\" + date.getFullYear() + \" at time: \" + date.getHours() + \":\" + date.getMinutes()]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 53,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 13\n        }, this);\n      } else if (this.state.fileUploadSuccessfully) {\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 61,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n            children: \"Your file has been successfully uploaded! \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 62,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 13\n        }, this);\n      } else {\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 68,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n            children: \"Choose a file and then press the Upload button! \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 69,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 13\n        }, this);\n      }\n    };\n  }\n  ///////////////////////////////////////////////////////////\n\n  render() {\n    let user = getUser();\n    let name = user !== 'undefined' && user ? user.name : '';\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \" Filesurfer Converter System \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \" File Upload with React and a Serverless API! \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"file\",\n          onChange: this.onFileChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: this.onFileUpload,\n          children: \"Upload\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 17\n      }, this), this.fileData(), \"Hello \", name, \"! You have been loggined in!!! Welcome to the jungle! \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 83\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"button\",\n        value: \"Logout\",\n        onClick: logoutHandler\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 13\n    }, this);\n  }\n}\nexport default FileUpload;","map":{"version":3,"names":["React","Component","getUser","resetUserSession","render","axios","jsxDEV","_jsxDEV","FileUpload","constructor","args","logoutHandler","window","location","state","selectedFile","fileUploadSuccessfully","onFileChange","event","setState","target","files","onFileUpload","formData","FormData","append","name","post","then","fileData","date","Date","lastModified","children","fileName","_jsxFileName","lineNumber","columnNumber","type","getDate","getMonth","getFullYear","getHours","getMinutes","user","className","onChange","onClick","value"],"sources":["/home/valerio/Uni/SDCC/FileSurferServerless/frontend/src/FileUpload.js"],"sourcesContent":["import React, {Component} from \"react\";\nimport {getUser, resetUserSession} from './service/AuthService';\nimport { render } from \"@testing-library/react\";\nimport axios from \"axios\";\n\nclass FileUpload extends Component{\n//const FileUpload = (props) => {\n\n    //user = getUser();\n    //name = user !== 'undefined' && user ? user.name : '';\n    \n\n    logoutHandler = () => {\n        resetUserSession();\n        //props.history.push('/login');\n        window.location = \"https://yv8a67sww8.execute-api.us-east-1.amazonaws.com/prod/login\";\n    }\n\n    ///////////////////////////////////////////////////////////\n\n    state = {\n        selectedFile: null,\n        fileUploadSuccessfully: false\n    }\n    \n    onFileChange = event => {\n        this.setState({selectedFile: event.target.files[0]});\n    }\n\n    onFileUpload = () => {\n        const formData = new FormData();\n        formData.append(\n            \"demo file\",\n            this.state.selectedFile,\n            this.state.selectedFile.name\n        )\n        //call api to upload the file\n        axios.post(\" https://yv8a67sww8.execute-api.us-east-1.amazonaws.com/prod/file-upload\", formData).then(() => {\n            this.setState({selectedFile: null});\n            this.setState({fileUploadSuccessfully: true});\n        })\n        \n    }\n\n    fileData = () => {\n        if(this.state.selectedFile){\n          var date = new Date(this.state.selectedFile.lastModified);\n          return(\n            <div>\n              <h2>File Details:</h2>\n              <p>File Name: {this.state.selectedFile.name}</p>\n              <p>File Type: {this.state.selectedFile.type}</p>\n              <p>Last Modified: {\" \"}\n                  {date.getDate()+ \"-\" + date.getMonth() + \"-\" + date.getFullYear() + \" at time: \" + date.getHours() + \":\" + date.getMinutes()}\n              </p>\n            </div>\n          );\n        } else if(this.state.fileUploadSuccessfully){\n          return (\n            <div>\n              <br />\n              <h4>Your file has been successfully uploaded! </h4>\n            </div>\n          );\n        } else {\n          return (\n            <div>\n              <br />\n              <h4>Choose a file and then press the Upload button! </h4>\n            </div>\n          )\n        }\n    }\n\n    ///////////////////////////////////////////////////////////\n    \n    render(){\n        let user = getUser();\n        let name = user !== 'undefined' && user ? user.name : '';\n        return (\n            <div className=\"container\">\n                <h2> Filesurfer Converter System </h2>\n                <h3> File Upload with React and a Serverless API! </h3>\n                <div>\n                    <input type=\"file\" onChange={this.onFileChange} />\n                    <button onClick={this.onFileUpload}>\n                        Upload\n                    </button>\n                </div>\n                {this.fileData()}\n                Hello {name}! You have been loggined in!!! Welcome to the jungle! <br/>\n                <input type=\"button\" value=\"Logout\" onClick={logoutHandler}/>\n            </div>    \n        )\n    }\n    \n    \n}\n\nexport default FileUpload;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}