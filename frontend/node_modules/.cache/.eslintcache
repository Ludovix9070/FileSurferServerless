[{"/home/ludovico/SDCC_Serverless/FileSurferServerless/frontend/src/index.js":"1","/home/ludovico/SDCC_Serverless/FileSurferServerless/frontend/src/App.js":"2","/home/ludovico/SDCC_Serverless/FileSurferServerless/frontend/src/Register.js":"3","/home/ludovico/SDCC_Serverless/FileSurferServerless/frontend/src/FileDownload.js":"4","/home/ludovico/SDCC_Serverless/FileSurferServerless/frontend/src/FileUpload.js":"5","/home/ludovico/SDCC_Serverless/FileSurferServerless/frontend/src/Login.js":"6","/home/ludovico/SDCC_Serverless/FileSurferServerless/frontend/src/routes/PublicRoute.js":"7","/home/ludovico/SDCC_Serverless/FileSurferServerless/frontend/src/routes/PrivateRoutes.js":"8","/home/ludovico/SDCC_Serverless/FileSurferServerless/frontend/src/service/AuthService.js":"9"},{"size":221,"mtime":1693860765000,"results":"10","hashOfConfig":"11"},{"size":2693,"mtime":1694788922751,"results":"12","hashOfConfig":"11"},{"size":1940,"mtime":1694788782298,"results":"13","hashOfConfig":"11"},{"size":3122,"mtime":1694788902531,"results":"14","hashOfConfig":"11"},{"size":3422,"mtime":1694788685973,"results":"15","hashOfConfig":"11"},{"size":2009,"mtime":1694788872275,"results":"16","hashOfConfig":"11"},{"size":460,"mtime":1693927485000,"results":"17","hashOfConfig":"11"},{"size":455,"mtime":1693927484000,"results":"18","hashOfConfig":"11"},{"size":610,"mtime":1694506736000,"results":"19","hashOfConfig":"11"},{"filePath":"20","messages":"21","suppressedMessages":"22","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1uz6dvh",{"filePath":"23","messages":"24","suppressedMessages":"25","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"26"},{"filePath":"27","messages":"28","suppressedMessages":"29","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"30","messages":"31","suppressedMessages":"32","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"33","messages":"34","suppressedMessages":"35","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"36"},{"filePath":"37","messages":"38","suppressedMessages":"39","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"40","messages":"41","suppressedMessages":"42","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"43","messages":"44","suppressedMessages":"45","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"46","messages":"47","suppressedMessages":"48","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/home/ludovico/SDCC_Serverless/FileSurferServerless/frontend/src/index.js",[],[],"/home/ludovico/SDCC_Serverless/FileSurferServerless/frontend/src/App.js",["49"],[],"import { BrowserRouter, NavLink, Route, Switch } from \"react-router-dom\";\nimport Register from \"./Register\";\nimport Login from \"./Login\";\nimport FileUpload from \"./FileUpload\";\nimport FileDownload from \"./FileDownload\";\nimport PublicRoute from \"./routes/PublicRoute\";\nimport PrivateRoute from \"./routes/PrivateRoutes\";\nimport React, { useEffect, useState } from \"react\";\nimport { getUser, getToken, setUserSession, resetUserSession } from \"./service/AuthService\";\nimport axios from \"axios\";\n\nconst verifyTokenAPIUrl = 'https://891mazmbm6.execute-api.us-east-1.amazonaws.com/prod/verify';\n\nfunction App() {\n\n \n  document.title=\"FileSurfer\";\n  \n\n  const [isAuthenticating, setAuthenticating] = useState(true);\n\n  useEffect(() => {\n    const token = getToken();\n    if(token === 'undefined' || token === undefined || token === null || !token){\n      return;\n    }\n\n    const requestConfig = {\n      headers: {\n          'x-api-key': 'AWSOFGYQpg2EwcG41eiyXalnnBTPdhCJ6Q5SLdzy'\n      }\n    }\n\n    const requestBody = {\n      user: getUser(),\n      token: token\n    }\n\n    axios.post(verifyTokenAPIUrl, requestBody, requestConfig).then(response => {\n      setUserSession(response.data.user, response.data.token);\n      setAuthenticating(false); //se il token è stato validato\n    }).catch(() => {\n      resetUserSession();\n      setAuthenticating(false); //se l'autenticazione è completata\n    })\n\n  }, []);\n\n  const token = getToken();\n  if(isAuthenticating && token){\n    return <div className=\"content\"> Authenticating ...</div>\n  }\n\n  return (\n    \n    <div className=\"App\">\n      <br/>\n      <div id=\"logo\">\n\t\t\t  <center><img class=\"logocss\" src={require('./static/fss.png')} width=\"200px\" height=\"130px\" alt=\"FileSurfer\" /></center>\n\t\t  </div>\n      <BrowserRouter>\n      <div>\n        <nav class=\"links\" style={{'--items': 4}}>\n          <NavLink activeClassName=\"selected\" to=\"/register\">Register</NavLink>\n          <NavLink exact activeClassName=\"selected\" to=\"/login\">Login</NavLink>\n          <NavLink activeClassName=\"selected\" to=\"/file-upload\">Upload</NavLink>\n          <NavLink activeClassName=\"selected\" to=\"/file-download\">Download</NavLink>\n          <span class=\"line\"></span>\n        </nav>\n        \n      </div>\n      <div className=\"content\">\n        <Switch>\n          <PublicRoute exact path=\"/\" component={Login}/>\n          <PublicRoute path=\"/register\" component={Register}/>\n          <PublicRoute path=\"/login\" component={Login}/>\n          <PrivateRoute path=\"/file-upload\" component={FileUpload}/>\n          <PrivateRoute path=\"/file-download\" component={FileDownload}/>\n        </Switch>\n      </div>\n      </BrowserRouter>\n    </div>\n  );\n}\n\nexport default App;\n","/home/ludovico/SDCC_Serverless/FileSurferServerless/frontend/src/Register.js",[],[],"/home/ludovico/SDCC_Serverless/FileSurferServerless/frontend/src/FileDownload.js",[],[],"/home/ludovico/SDCC_Serverless/FileSurferServerless/frontend/src/FileUpload.js",["50"],[],"import React, {Component} from \"react\";\nimport {getUser, resetUserSession} from './service/AuthService';\nimport axios from \"axios\";\n\nclass FileUpload extends Component {\n\n    user = getUser();\n    state = {\n        selectedFile: null,\n        fileUploadSuccessfully: false,\n        email: ''\n    }\n    \n    onFileChange = event => {\n        this.setState({selectedFile: event.target.files[0]});\n    }\n\n    onFileUpload = () => {\n        const formData = new FormData();\n        if (this.state.selectedFile === null){\n          if (window.confirm('Please choose a file to convert!')) {\n            window.location.reload();\n          };\n        }\n        formData.append(\n            \"file\",\n            this.state.selectedFile,\n            this.state.selectedFile.name,\n        )\n\n        formData.append(\"email\", this.state.email);\n        \n        //call api to upload the file\n        axios.post(\" https://891mazmbm6.execute-api.us-east-1.amazonaws.com/prod/file-upload\", formData).then(() => {\n            this.setState({selectedFile: null});\n            this.setState({fileUploadSuccessfully: true});\n        }) \n    }\n\n    fileData = () => {\n        if(this.state.selectedFile){\n          var date = new Date(this.state.selectedFile.lastModified);\n          return(\n            <div>\n              <br/>\n              <h3>File Details:</h3>\n              \n              <p>File Name: {this.state.selectedFile.name}</p>\n              <p>File Type: {this.state.selectedFile.type}</p>\n              <p>Last Modified: {\" \"}\n                  {date.getDate()+ \"-\" + date.getMonth() + \"-\" + date.getFullYear() + \" at time: \" + date.getHours() + \":\" + date.getMinutes()}\n              </p>\n              <br/>\n            </div>\n          );\n        \n        } else if(this.state.fileUploadSuccessfully){\n          return (\n            <div>\n              <br />\n              <br/>\n              <h4>Your file has been successfully uploaded! </h4>\n              <br/>\n            </div>\n          );\n        } else {\n          return (\n            <div>\n              <br /><br/>\n              <h4>Choose a file and then press the Upload button! </h4><br/>\n            </div>\n          )\n        }\n    }\n\n    ///////////////////////////////////////////////////////////\n    \n    render(){\n\n        let user = getUser();\n        let email = user !== 'undefined' && user ? user.email : '';\n        this.state.email = email;\n\n        const logoutHandler = () => {\n            resetUserSession();\n            this.props.history.push('/login');\n        }\n\n        return (\n            <div className=\"container\">\n                <h2> Filesurfer Converter System </h2>\n                <br/>\n                <h3> File Upload with React and a Serverless API! </h3>\n                <br/><br/>\n                <div>\n                    <input type=\"file\" accept=\".csv\" onChange={this.onFileChange}/>\n                    <button onClick={this.onFileUpload}>\n                        Upload\n                    </button>\n                </div>\n                {this.fileData()}\n                Hello <p class=\"emailclass\">{this.state.email}!</p> <br/>You have been loggined in!!! Welcome to the jungle! <br/>\n                <br/><br/>\n                <input class=\"button\" style={{'--clr': '#1ab5d4'}} type=\"button\" value=\"Logout\" onClick={logoutHandler}/>\n            </div>    \n        )\n    }\n    \n    \n}\n\nexport default FileUpload;","/home/ludovico/SDCC_Serverless/FileSurferServerless/frontend/src/Login.js",[],[],"/home/ludovico/SDCC_Serverless/FileSurferServerless/frontend/src/routes/PublicRoute.js",[],[],"/home/ludovico/SDCC_Serverless/FileSurferServerless/frontend/src/routes/PrivateRoutes.js",[],[],"/home/ludovico/SDCC_Serverless/FileSurferServerless/frontend/src/service/AuthService.js",[],[],{"ruleId":"51","severity":1,"message":"52","line":1,"column":34,"nodeType":"53","messageId":"54","endLine":1,"endColumn":39},{"ruleId":"55","severity":1,"message":"56","line":82,"column":9,"nodeType":"57","messageId":"58","endLine":82,"endColumn":19},"no-unused-vars","'Route' is defined but never used.","Identifier","unusedVar","react/no-direct-mutation-state","Do not mutate state directly. Use setState().","MemberExpression","noDirectMutation"]